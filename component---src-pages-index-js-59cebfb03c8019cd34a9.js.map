{"version":3,"sources":["webpack:///./src/components/body.js","webpack:///./src/components/header.js","webpack:///./src/utils/trie.js","webpack:///./src/components/favoriteStar.js","webpack:///./src/components/searchResults.jsx","webpack:///./src/components/search.js","webpack:///./src/pages/index.js","webpack:///./src/components/header.module.css","webpack:///./src/components/search.module.css","webpack:///./src/components/searchResults.module.css"],"names":["body","_ref","children","react_default","a","createElement","style","margin","maxWidth","padding","header","className","styles","trieNode","key","this","parent","endOfWord","getWord","output","node","unshift","join","trie","root","insert","word","i","length","findAllWords","arr","child","search","prefix","FavoriteStar","_this","_React$Component","call","checkSaved","loadFavorites","localStorage","getItem","isSaved","JSON","parse","forEach","item","state","title","localeCompare","setState","color","toggleFavorite","forceUpdate","props","saveFavorite","desc","unSaveFavorite","componentDidMount","_this2","render","onClick","React","Component","words","Trie","SearchResults","commitChange","window","setItem","stringify","favorites","toUpdate","slice","push","index","itemLocation","itemSaved","splice","renderSavedItems","map","favorite","container","one","favoriteStar","two","three","dangerouslySetInnerHTML","__html","htmlDecode","storedFavorites","input","e","document","innerHTML","childNodes","nodeValue","shouldComponentUpdate","nextProps","nextState","searchQuery","data","Object","keys","keyword","renderItem","query","results","renderFavorites","searchResult","keywordDictionary","Search","mapData","wasteWizardData","allWastewizardJson","edges","strtok","keywords","toLowerCase","split","trim","wasteEntry","submitSearch","handleChange","event","inputValue","target","value","keyPress","keyCode","JSONData","searchContainer","onKeyDown","onChange","type","placeholder","name","searchResults","__webpack_require__","d","__webpack_exports__","pages_query","module","exports","searchElement"],"mappings":"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","file":"component---src-pages-index-js-59cebfb03c8019cd34a9.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({ children }) => (\r\n  <div\r\n    style={{\r\n      margin: `3rem auto`,\r\n      maxWidth: 950,\r\n      padding: `0 1rem`\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nexport default ({ children }) => (\r\n  <div className = {styles.header}  >\r\n    {children}\r\n  </div>\r\n);\r\n","class trieNode {\r\n  constructor(key) {\r\n    this.key = key; //character in sequence\r\n    this.parent = null;\r\n    this.children = {};\r\n    this.endOfWord = false;\r\n  }\r\n\r\n  //itterate through parents to get word\r\n  getWord() {\r\n    let output = [];\r\n    let node = this;\r\n\r\n    while (node !== null) {\r\n      output.unshift(node.key);\r\n      node = node.parent;\r\n    }\r\n\r\n    return output.join(\"\");\r\n  }\r\n}\r\n\r\nclass trie {\r\n  constructor() {\r\n    this.root = new trieNode(null);\r\n  }\r\n\r\n  //insert word into trie\r\n  insert(word) {\r\n    var node = this.root; // start at the root\r\n\r\n    // for every character in the word\r\n    for (var i = 0; i < word.length; i++) {\r\n      // check to see if character node exists in children.\r\n      if (!node.children[word[i]]) {\r\n        // if it doesn't exist, we then create it.\r\n        node.children[word[i]] = new trieNode(word[i]);\r\n\r\n        // we also assign the parent to the child node.\r\n        node.children[word[i]].parent = node;\r\n      }\r\n\r\n      // proceed to the next depth in the trie.\r\n      node = node.children[word[i]];\r\n\r\n      // finally, we check to see if it's the last word.\r\n      if (i === word.length - 1) {\r\n        // if it is, we set the end flag to true.\r\n        node.endOfWord = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // recursive function to find all words in the given node.\r\n  findAllWords(node, arr) {\r\n    // base case, if node is at a word, push to output\r\n    if (node.endOfWord) {\r\n      arr.unshift(node.getWord());\r\n    }\r\n\r\n    // iterate through each children, call recursive findAllWords\r\n    for (var child in node.children) {\r\n      this.findAllWords(node.children[child], arr);\r\n    }\r\n  }\r\n\r\n  // returns every word with given prefix\r\n  search(prefix) {\r\n    var node = this.root;\r\n    var output = [];\r\n\r\n    // for every character in the prefix\r\n    for (var i = 0; i < prefix.length; i++) {\r\n      // make sure prefix actually has words\r\n      if (node.children[prefix[i]]) {\r\n        node = node.children[prefix[i]];\r\n      } else {\r\n        // there's none. just return it.\r\n        return output;\r\n      }\r\n    }\r\n\r\n    // recursively find all words in the node\r\n    this.findAllWords(node, output);\r\n\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default trie;\r\n","import React from \"react\";\r\n\r\nclass FavoriteStar extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      desc: \"\",\r\n      color: \"grey\"\r\n    };\r\n  }\r\n\r\n  checkSaved = () => {\r\n    let loadFavorites = localStorage.getItem(\"favorites\");\r\n    let isSaved = false;\r\n\r\n    if (loadFavorites !== null) {\r\n      loadFavorites = JSON.parse(loadFavorites);\r\n\r\n      loadFavorites.forEach(item => {\r\n        if (this.state.title.localeCompare(item.title) === 0) {\r\n          isSaved = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isSaved === true) {\r\n      this.setState({ color: \"#56ca90\" });\r\n    }\r\n  };\r\n\r\n  toggleFavorite = () => {\r\n    this.forceUpdate();\r\n    if (this.state.color === \"grey\") {\r\n      this.setState({\r\n        color: \"#56ca90\"\r\n      });\r\n\r\n      this.props.saveFavorite({\r\n        title: this.state.title,\r\n        desc: this.state.desc\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"grey\"\r\n      });\r\n      this.props.unSaveFavorite({\r\n        title: this.state.title,\r\n        desc: this.state.desc\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      {\r\n        title: this.props.title,\r\n        desc: this.props.desc\r\n      },\r\n      () => this.checkSaved()\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.toggleFavorite}>\r\n        <i className={`fa fa-star`} style={{ color: this.state.color }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavoriteStar;\r\n","import React from \"react\";\r\nimport Trie from \"../utils/trie\";\r\nimport styles from \"./searchResults.module.css\";\r\nimport FavoriteStar from \"../components/favoriteStar\";\r\n\r\nvar words = new Trie();\r\n\r\nclass SearchResults extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      let storedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n      if (storedFavorites === null) {\r\n        storedFavorites = [];\r\n      }\r\n\r\n      this.state = {\r\n        search: \"\",\r\n        favorites: storedFavorites\r\n      };\r\n    }\r\n  }\r\n\r\n  htmlDecode(input) {\r\n    var e = document.createElement(\"div\");\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.searchQuery !== nextProps.searchQuery) {\r\n      return true;\r\n    }\r\n    if (this.state.favorites !== nextState.favorites) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  loadFavorites() {\r\n    if (typeof window !== \"undefined\") {\r\n      const loadFavorites = localStorage.getItem(\"favorites\");\r\n\r\n      if (loadFavorites !== null) {\r\n        this.setState({\r\n          favorites: JSON.parse(loadFavorites)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = this.props.data;\r\n\r\n    Object.keys(data).forEach(keyword => {\r\n      words.insert(keyword);\r\n    });\r\n  }\r\n\r\n  renderItem(query) {\r\n    return query.map((results, key) => (\r\n      <div className={styles.container} key={key}>\r\n        <div className={styles.one}>\r\n          <FavoriteStar\r\n            title={this.props.data[results].title}\r\n            desc={this.props.data[results].body}\r\n            saveFavorite={this.saveFavorite}\r\n            unSaveFavorite={this.unSaveFavorite}\r\n          />\r\n        </div>\r\n        <div\r\n          className={styles.two}\r\n          dangerouslySetInnerHTML={{\r\n            __html: this.htmlDecode(this.props.data[results].title)\r\n          }}\r\n        />\r\n        <div\r\n          className={styles.three}\r\n          dangerouslySetInnerHTML={{\r\n            __html: this.htmlDecode(this.props.data[results].body)\r\n          }}\r\n        />\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  commitChange = () => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"favorites\", JSON.stringify(this.state.favorites));\r\n    }\r\n  };\r\n\r\n  saveFavorite = item => {\r\n    let toUpdate = this.state.favorites.slice();\r\n    toUpdate.push(item);\r\n\r\n    this.setState(\r\n      {\r\n        favorites: toUpdate\r\n      },\r\n      () => this.commitChange()\r\n    );\r\n  };\r\n\r\n  unSaveFavorite = item => {\r\n    let toUpdate = this.state.favorites.slice();\r\n    toUpdate.push(item);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      let loadFavorites = localStorage.getItem(\"favorites\");\r\n\r\n      let index = 0;\r\n      let itemLocation = 0;\r\n\r\n      if (loadFavorites !== null) {\r\n        loadFavorites = JSON.parse(loadFavorites);\r\n\r\n        loadFavorites.forEach(itemSaved => {\r\n          if (item.title.localeCompare(itemSaved.title) === 0) {\r\n            itemLocation = index;\r\n          }\r\n\r\n          index++;\r\n        });\r\n      }\r\n\r\n      toUpdate.splice(itemLocation);\r\n\r\n      this.setState(\r\n        {\r\n          favorites: toUpdate\r\n        },\r\n        () => this.commitChange()\r\n      );\r\n    }\r\n  };\r\n\r\n  renderSavedItems = () => {\r\n    return this.state.favorites.map((favorite, key) => (\r\n      <div className={styles.container} key={key}>\r\n        <div className={styles.one}>\r\n          <FavoriteStar\r\n            title={favorite.title}\r\n            desc={favorite.desc}\r\n            saveFavorite={this.saveFavorite}\r\n            unSaveFavorite={this.unSaveFavorite}\r\n          />\r\n        </div>\r\n        <div className={styles.two}>{favorite.title}</div>\r\n        <div\r\n          className={styles.three}\r\n          dangerouslySetInnerHTML={{\r\n            __html: this.htmlDecode(favorite.desc)\r\n          }}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  renderFavorites() {\r\n    if (this.state != null) {\r\n      if (this.state.favorites.length > 0) {\r\n        return (\r\n          <div>\r\n            Favorites <div>{this.renderSavedItems()}</div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const searchResult = words.search(this.props.searchQuery);\r\n    return (\r\n      <div>\r\n        {this.renderItem(searchResult)}\r\n        {this.renderFavorites()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport styles from \"./search.module.css\";\r\nimport SearchResults from \"../components/searchResults\";\r\n\r\nvar keywordDictionary = {};\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: \"\",\r\n      searchQuery: \"\"\r\n    };\r\n\r\n    this.mapData(this.props.JSONData);\r\n  }\r\n\r\n  mapData = data => {\r\n    const wasteWizardData = data.allWastewizardJson.edges;\r\n\r\n    Object.keys(wasteWizardData).forEach(key => {\r\n      let strtok = wasteWizardData[key].node.keywords.toLowerCase().split(\",\");\r\n      strtok = strtok.map(key => key.trim()); //remove spaces in keywords\r\n\r\n      const wasteEntry = wasteWizardData[key].node;\r\n      strtok.forEach(key => {\r\n        keywordDictionary[key] = wasteEntry;\r\n      });\r\n    });\r\n  };\r\n\r\n  submitSearch = query => {\r\n    this.setState({ searchQuery: query.toLowerCase() });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ inputValue: event.target.value });\r\n    if (event.target.value === \"\") {\r\n      this.submitSearch(\"nothing\");\r\n    }\r\n  };\r\n\r\n  keyPress = event => {\r\n    if (event.keyCode === 13) {\r\n      this.submitSearch(event.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.searchContainer}>\r\n          <input\r\n            value={this.state.inputValue}\r\n            onKeyDown={this.keyPress}\r\n            onChange={this.handleChange}\r\n            className=\"searchElement\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            name=\"search\"\r\n          />\r\n          <button\r\n            className=\"searchElement\"\r\n            onClick={() => this.submitSearch(this.state.inputValue)}\r\n          >\r\n            <i className=\"fa fa-search fa-2x\" />\r\n          </button>\r\n        </div>\r\n        <SearchResults\r\n          data={keywordDictionary}\r\n          searchQuery={this.state.searchQuery}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Body from \"../components/body\";\r\nimport Header from \"../components/header\";\r\nimport Search from \"../components/search\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nexport default ({ data }) => (\r\n  <div>\r\n    <Header>Toronto Waste Lookup</Header>\r\n    <Body>\r\n      <Search JSONData={data} />\r\n    </Body>\r\n  </div>\r\n);\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allWastewizardJson {\r\n      edges {\r\n        node {\r\n          title\r\n          category\r\n          body\r\n          keywords\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header-module--header--30i_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search-module--searchContainer--2wecm\",\"searchElement\":\"search-module--searchElement--22yKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"searchResults-module--container--2Y6Jy\",\"one\":\"searchResults-module--one--3Lbe0\",\"two\":\"searchResults-module--two--1-rhK\",\"three\":\"searchResults-module--three--IbWke\"};"],"sourceRoot":""}